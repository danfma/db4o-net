/* Copyright (C) 2004 - 2007  db4objects Inc.  http://www.db4o.com */

using Db4oUnit;
using Db4oUnit.Extensions;
using Db4objects.Db4o;
using Db4objects.Db4o.Foundation.IO;
using Db4objects.Db4o.Tests.Common.Assorted;

namespace Db4objects.Db4o.Tests.Common.Assorted
{
	public class PreventMultipleOpenTestCase : AbstractDb4oTestCase
	{
		private static readonly string FILE = "PreventMultipleOpenTestCase.db4o";

		public static void Main(string[] args)
		{
			new PreventMultipleOpenTestCase().RunSolo();
		}

		protected override void Db4oSetupBeforeStore()
		{
			DeleteFile();
		}

		protected override void Db4oTearDownBeforeClean()
		{
			DeleteFile();
		}

		public virtual void TestOpenTwice()
		{
			IObjectContainer oc = OpenFile();
			Assert.Expect(typeof(DatabaseFileLockedException), new _ICodeBlock_31(this));
			oc.Close();
		}

		private sealed class _ICodeBlock_31 : ICodeBlock
		{
			public _ICodeBlock_31(PreventMultipleOpenTestCase _enclosing)
			{
				this._enclosing = _enclosing;
			}

			public void Run()
			{
				this._enclosing.OpenFile();
			}

			private readonly PreventMultipleOpenTestCase _enclosing;
		}

		public virtual void TestReopen()
		{
			IObjectContainer oc = OpenFile();
			oc.Close();
			oc = OpenFile();
			Assert.IsNotNull(oc);
			oc.Close();
		}

		private IObjectContainer OpenFile()
		{
			return Db4oFactory.OpenFile(FILE);
		}

		private void DeleteFile()
		{
			File4.Delete(FILE);
		}
	}
}
